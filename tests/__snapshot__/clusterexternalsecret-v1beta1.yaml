apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata: {}
spec:
  externalSecretMetadata:
    annotations: {}
    labels: {}
  externalSecretName: string
  externalSecretSpec:
    data:
    - remoteRef:
        conversionStrategy: "Default"
        decodingStrategy: "None"
        key: string
        metadataPolicy: "None"
        property: string
        version: string
      secretKey: string
      sourceRef:
        generatorRef:
          apiVersion: external-secrets.io/v1beta1
          kind: "ACRAccessToken" # "ACRAccessToken", "ClusterGenerator", "ECRAuthorizationToken", "Fake", "GCRAccessToken", "GithubAccessToken", "QuayAccessToken", "Password", "STSSessionToken", "UUID", "VaultDynamicSecret", "Webhook", "Grafana"
          name: string
        storeRef:
          kind: "SecretStore" # "SecretStore", "ClusterSecretStore"
          name: string
    dataFrom:
    - extract:
        conversionStrategy: "Default"
        decodingStrategy: "None"
        key: string
        metadataPolicy: "None"
        property: string
        version: string
      find:
        conversionStrategy: "Default"
        decodingStrategy: "None"
        name:
          regexp: string
        path: string
        tags: {}
      rewrite:
      - regexp:
          source: string
          target: string
        transform:
          template: string
      sourceRef:
        generatorRef:
          apiVersion: external-secrets.io/v1beta1
          kind: "ACRAccessToken" # "ACRAccessToken", "ClusterGenerator", "ECRAuthorizationToken", "Fake", "GCRAccessToken", "GithubAccessToken", "QuayAccessToken", "Password", "STSSessionToken", "UUID", "VaultDynamicSecret", "Webhook", "Grafana"
          name: string
        storeRef:
          kind: "SecretStore" # "SecretStore", "ClusterSecretStore"
          name: string
    refreshInterval: "1h"
    secretStoreRef:
      kind: "SecretStore" # "SecretStore", "ClusterSecretStore"
      name: string
    target:
      creationPolicy: "Owner"
      deletionPolicy: "Retain"
      immutable: true
      name: string
      template:
        data: {}
        engineVersion: "v2"
        mergePolicy: "Replace"
        metadata:
          annotations: {}
          labels: {}
        templateFrom:
        - configMap:
            items:
            - key: string
              templateAs: "Values"
            name: string
          literal: string
          secret:
            items:
            - key: string
              templateAs: "Values"
            name: string
          target: "Data"
        type: string
  namespaceSelector:
    matchExpressions:
    - key: string
      operator: string
      values: [] # minItems 0 of type string
    matchLabels: {}
  namespaceSelectors:
  - matchExpressions:
    - key: string
      operator: string
      values: [] # minItems 0 of type string
    matchLabels: {}
  namespaces: [] # minItems 0 of type string
  refreshTime: string
status:
  conditions:
  - message: string
    status: string
    type: string
  externalSecretName: string
  failedNamespaces:
  - namespace: string
    reason: string
  provisionedNamespaces: [] # minItems 0 of type string
